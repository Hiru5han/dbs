Sakila

Question 1: Select * FROM actor;
Question 2: Select * FROM actor WHERE first_name = 'John';
Question 3: Select * FROM actor WHERE last_name = 'Neeson';
Question 4: SELECT * FROM actor WHERE actor_id % 10 = 0;
Question 5: SELECT description FROM film WHERE film_id = 100;
Question 6: SELECT title FROM film WHERE rating = 'R';
Question 7: SELECT title FROM film WHERE rating != 'R';
Question 8: SELECT title FROM film ORDER BY length ASC LIMIT 5;
Question 9: SELECT title FROM film ORDER BY length DESC;
Question 10: SELECT title FROM film WHERE special_features = 'Deleted Scenes';
*Question 11: SELECT last_name FROM actor GROUP BY last_name HAVING COUNT(last_name) <= 1 ORDER BY last_name DESC;
*Question 12:
Question 13: Copied from Rhys    
SELECT actor.first_name, actor.last_name FROM actor    
-> LEFT JOIN film_actor on actor.actor_id = film_actor,actor_id    
-> GROUP BY actor.actor_id, actor.FIRST_NAME, actor.LAST_NAME    
-> ORDER BY COUNT(*) DESC LIMIT 1    -> ;
Question 14: SELECT release_year FROM film WHERE title = 'ACADEMY DINOSAUR';
Question 15: SELECT AVG(length) FROM film;
Question 16: SELECT AVG(length), category FROM film_list GROUP BY category ORDER BY category ASC;
Question 17: SELECT title FROM film WHERE description LIKE '%robot%';
Question 18: SELECT COUNT(release_year) FROM film WHERE release_year LIKE 2010;
Question 19: SELECT title FROM film_list WHERE category LIKE 'horror';
Question 20: SELECT first_name, last_name FROM staff WHERE staff_id = 2;
Question 21: SELECT first_name, last_name FROM actor WHERE last_name LIKE '%son' GROUP BY first_name ORDER BY first_name ASC;
SELECT A.title FROM film A
INNER JOIN film_actor B ON A.film_id=B.film_id
INNER JOIN actor C ON B.actor_id=C.actor_id
WHERE (C.first_name='Fred' AND C.last_name='Costner');

Question 22: SELECT DISTINCT COUNT(country) country FROM country;
Question 23: SELECT name FROM language ORDER BY name DESC;
Question 24: SELECT first_name FROM actor WHERE last_name LIKE '%son%' ORDER BY first_name ASC;
Question 25: SELECT MAX(category) FROM film_list;

World

Question 1: SELECT COUNT('city') FROM city WHERE CountryCode = 'USA';
Question 2: SELECT Name, Population, LifeExpectancy FROM country WHERE Name = 'Argentina';
Question 3: SELECT Name, LifeExpectancy FROM countryWHERE LifeExpectancy IS NOT NULLORDER BY LifeExpectancy DESCLIMIT 1
Question 4: SELECT City.Name FROM CITY JOIN Country ON city.id=country.Capital WHERE country.Name='Spain';
Question 5: SELECT DISTINCT language FROM Countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE region LIKE 'SOUTHEAST ASIA'
Question 6: SELECT Name FROM city WHERE name LIKE 'F%' LIMIT 25;
Question 7: SELECT Name, Population FROM country WHERE Population IS NOT NULL ORDER BY Population ASC LIMIT 1;
Question 8: SELECT COUNT(name) FROM country;
Question 9: SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 10;
Question 10: SELECT NAME from city WHERE Countrycode = 'JPN' ORDER BY Population DESC LIMIT 5;

MovieLens

Question 1: SELECT title, release_date FROM movies WHERE Release_date BETWEEN '1989-01-01' AND '1993-01-01' ORDER BY release_date DESC;
Question 2: SELECT movies.title, AVG(ratings.rating) FROM movies JOIN ratings ON movies.id = ratings.movie_id WHERE ratings.rating =( SELECT MIN(rating) FROM ratings) GROUP BY movies.id;
Question 3: SELECT movies.id, titleFROM movies
JOIN genres_movies ON genres_movies.movie_id=movies.id
JOIN genres ON genres.id=genres_movies.genre_id
JOIN ratings ON ratings.movie_id=movies.id
JOIN users ON users.id=ratings.user_id
JOIN occupations ON occupations.id=users.occupation_id
WHERE genres.name='Sci-Fi'AND users.age='24'
AND users.gender='m'AND ratings.rating='5'
AND occupations.name='Student';